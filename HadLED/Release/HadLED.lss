
HadLED.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000010c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000002  00800060  00800060  00000180  2**0
                  ALLOC
  2 .stab         000006cc  00000000  00000000  00000180  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000085  00000000  00000000  0000084c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	21 c0       	rjmp	.+66     	; 0x46 <__bad_interrupt>
   4:	20 c0       	rjmp	.+64     	; 0x46 <__bad_interrupt>
   6:	1f c0       	rjmp	.+62     	; 0x46 <__bad_interrupt>
   8:	1e c0       	rjmp	.+60     	; 0x46 <__bad_interrupt>
   a:	1d c0       	rjmp	.+58     	; 0x46 <__bad_interrupt>
   c:	1c c0       	rjmp	.+56     	; 0x46 <__bad_interrupt>
   e:	1b c0       	rjmp	.+54     	; 0x46 <__bad_interrupt>
  10:	1a c0       	rjmp	.+52     	; 0x46 <__bad_interrupt>
  12:	54 c0       	rjmp	.+168    	; 0xbc <__vector_9>
  14:	18 c0       	rjmp	.+48     	; 0x46 <__bad_interrupt>
  16:	17 c0       	rjmp	.+46     	; 0x46 <__bad_interrupt>
  18:	16 c0       	rjmp	.+44     	; 0x46 <__bad_interrupt>
  1a:	15 c0       	rjmp	.+42     	; 0x46 <__bad_interrupt>
  1c:	14 c0       	rjmp	.+40     	; 0x46 <__bad_interrupt>
  1e:	13 c0       	rjmp	.+38     	; 0x46 <__bad_interrupt>
  20:	12 c0       	rjmp	.+36     	; 0x46 <__bad_interrupt>
  22:	11 c0       	rjmp	.+34     	; 0x46 <__bad_interrupt>
  24:	10 c0       	rjmp	.+32     	; 0x46 <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_clear_bss>:
  32:	10 e0       	ldi	r17, 0x00	; 0
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	01 c0       	rjmp	.+2      	; 0x3c <.do_clear_bss_start>

0000003a <.do_clear_bss_loop>:
  3a:	1d 92       	st	X+, r1

0000003c <.do_clear_bss_start>:
  3c:	a2 36       	cpi	r26, 0x62	; 98
  3e:	b1 07       	cpc	r27, r17
  40:	e1 f7       	brne	.-8      	; 0x3a <.do_clear_bss_loop>
  42:	5c d0       	rcall	.+184    	; 0xfc <main>
  44:	61 c0       	rjmp	.+194    	; 0x108 <_exit>

00000046 <__bad_interrupt>:
  46:	dc cf       	rjmp	.-72     	; 0x0 <__vectors>

00000048 <doPause>:
  48:	08 95       	ret

0000004a <doPauseQuick>:
  4a:	08 95       	ret

0000004c <had>:
  4c:	91 e0       	ldi	r25, 0x01	; 1
  4e:	98 bb       	out	0x18, r25	; 24
  50:	8f ef       	ldi	r24, 0xFF	; 255
  52:	87 bb       	out	0x17, r24	; 23
  54:	95 bb       	out	0x15, r25	; 21
  56:	84 bb       	out	0x14, r24	; 20
  58:	92 bb       	out	0x12, r25	; 18
  5a:	81 bb       	out	0x11, r24	; 17
  5c:	81 e0       	ldi	r24, 0x01	; 1
  5e:	90 e0       	ldi	r25, 0x00	; 0
  60:	88 0f       	add	r24, r24
  62:	99 1f       	adc	r25, r25
  64:	21 e0       	ldi	r18, 0x01	; 1
  66:	80 30       	cpi	r24, 0x00	; 0
  68:	92 07       	cpc	r25, r18
  6a:	11 f4       	brne	.+4      	; 0x70 <had+0x24>
  6c:	81 e0       	ldi	r24, 0x01	; 1
  6e:	90 e0       	ldi	r25, 0x00	; 0
  70:	28 2f       	mov	r18, r24
  72:	20 95       	com	r18
  74:	28 bb       	out	0x18, r18	; 24
  76:	25 bb       	out	0x15, r18	; 21
  78:	22 bb       	out	0x12, r18	; 18
  7a:	f2 cf       	rjmp	.-28     	; 0x60 <had+0x14>

0000007c <testPin>:
  7c:	80 e2       	ldi	r24, 0x20	; 32
  7e:	88 bb       	out	0x18, r24	; 24
  80:	8f ef       	ldi	r24, 0xFF	; 255
  82:	87 bb       	out	0x17, r24	; 23
  84:	ff cf       	rjmp	.-2      	; 0x84 <testPin+0x8>

00000086 <ledFlashing>:
  86:	80 e2       	ldi	r24, 0x20	; 32
  88:	88 bb       	out	0x18, r24	; 24
  8a:	8f ef       	ldi	r24, 0xFF	; 255
  8c:	87 bb       	out	0x17, r24	; 23
  8e:	81 e0       	ldi	r24, 0x01	; 1
  90:	90 e0       	ldi	r25, 0x00	; 0
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	30 e0       	ldi	r19, 0x00	; 0
  96:	48 2f       	mov	r20, r24
  98:	40 95       	com	r20
  9a:	48 bb       	out	0x18, r20	; 24
  9c:	82 27       	eor	r24, r18
  9e:	93 27       	eor	r25, r19
  a0:	fa cf       	rjmp	.-12     	; 0x96 <ledFlashing+0x10>

000000a2 <timer0Init>:
  a2:	10 92 61 00 	sts	0x0061, r1
  a6:	10 92 60 00 	sts	0x0060, r1
  aa:	89 b7       	in	r24, 0x39	; 57
  ac:	81 60       	ori	r24, 0x01	; 1
  ae:	89 bf       	out	0x39, r24	; 57
  b0:	82 e0       	ldi	r24, 0x02	; 2
  b2:	83 bf       	out	0x33, r24	; 51
  b4:	8a e6       	ldi	r24, 0x6A	; 106
  b6:	82 bf       	out	0x32, r24	; 50
  b8:	78 94       	sei
  ba:	08 95       	ret

000000bc <__vector_9>:
  bc:	1f 92       	push	r1
  be:	0f 92       	push	r0
  c0:	0f b6       	in	r0, 0x3f	; 63
  c2:	0f 92       	push	r0
  c4:	11 24       	eor	r1, r1
  c6:	8f 93       	push	r24
  c8:	9f 93       	push	r25
  ca:	8a e6       	ldi	r24, 0x6A	; 106
  cc:	82 bf       	out	0x32, r24	; 50
  ce:	80 91 60 00 	lds	r24, 0x0060
  d2:	90 91 61 00 	lds	r25, 0x0061
  d6:	01 96       	adiw	r24, 0x01	; 1
  d8:	90 93 61 00 	sts	0x0061, r25
  dc:	80 93 60 00 	sts	0x0060, r24
  e0:	82 30       	cpi	r24, 0x02	; 2
  e2:	91 05       	cpc	r25, r1
  e4:	21 f4       	brne	.+8      	; 0xee <__vector_9+0x32>
  e6:	10 92 61 00 	sts	0x0061, r1
  ea:	10 92 60 00 	sts	0x0060, r1
  ee:	9f 91       	pop	r25
  f0:	8f 91       	pop	r24
  f2:	0f 90       	pop	r0
  f4:	0f be       	out	0x3f, r0	; 63
  f6:	0f 90       	pop	r0
  f8:	1f 90       	pop	r1
  fa:	18 95       	reti

000000fc <main>:
  fc:	d2 df       	rcall	.-92     	; 0xa2 <timer0Init>
  fe:	a6 df       	rcall	.-180    	; 0x4c <had>
 100:	c2 df       	rcall	.-124    	; 0x86 <ledFlashing>
 102:	80 e0       	ldi	r24, 0x00	; 0
 104:	90 e0       	ldi	r25, 0x00	; 0
 106:	08 95       	ret

00000108 <_exit>:
 108:	f8 94       	cli

0000010a <__stop_program>:
 10a:	ff cf       	rjmp	.-2      	; 0x10a <__stop_program>
